FROM archfx/ubuntu:latest as builder

ARG RACKET_VERSION=8.1
ARG ROSETTE_VERSION=9f6322c9da5761da63126c7ef936bd77c210aeec
ARG Z3_VERSION=4.8.9
ARG BOOLECTOR_VERSION=3.2.1
ARG UNICORN_VERSION=1.0.2-rc3

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    autoconf \
    automake \
    autotools-dev \
    bc \
    bc \
    bison \
    build-essential \
    clang \
    cloc \
    curl \
    device-tree-compiler \
    flex \
    gawk \
    gcc \
    gcc-riscv64-linux-gnu \
    git \
    gperf \
    libattr1-dev \
    libcap-dev \
    libexpat-dev \
    libfdt-dev \
    libglib2.0-dev \
    libgmp-dev \
    libmpc-dev \
    libmpfr-dev \
    libncurses-dev \
    libpixman-1-dev \
    libtool \
    libusb-1.0-0-dev \
    llvm \
    make \
    patchutils \
    pkg-config \
    python3-pip \
    python3 \
    python-is-python3 \
    texinfo \
    vim \
    wget \
    zlib1g-dev \
    libzmq5  \
    libssl-dev



RUN wget "https://mirror.racket-lang.org/installers/${RACKET_VERSION}/racket-${RACKET_VERSION}-x86_64-linux-cs.sh" && \
    chmod +x ./racket-${RACKET_VERSION}-x86_64-linux-cs.sh && \
    echo 'yes\n1' | ./racket-${RACKET_VERSION}-x86_64-linux-cs.sh && \
	rm -f racket-${RACKET_VERSION}-x86_64-linux-cs.sh



# Install Unicorn
RUN git clone 'https://github.com/unicorn-engine/unicorn.git' && \
    cd unicorn && git checkout ${UNICORN_VERSION} && \
    env UNICORN_ARCHS="x86,arm,aarch64" ./make.sh && \
    env UNICORN_ARCHS="x86,arm,aarch64" ./make.sh install 

# Install Z3
RUN git clone 'https://github.com/Z3Prover/z3.git' && \
    cd z3 && git checkout z3-${Z3_VERSION} && \
    python3 scripts/mk_make.py --prefix /opt/z3/${Z3_VERSION} && \
    cd build && \
    make -j $(nproc) && make install && \
    cd .. && rm -rfv z3

# Install Rosette
RUN git clone 'https://github.com/emina/rosette.git' && \
    cd rosette && git checkout ${ROSETTE_VERSION} && \
    raco pkg install --auto -i --no-setup && raco setup -Dl rosette

# # Install riscv-fesvr
# RUN git clone 'https://github.com/riscv/riscv-fesvr.git' && \
#     cd riscv-fesvr && \
#     mkdir build && \
#     cd build && \
#     ../configure --prefix=/opt/riscv --target=riscv64-unknown-elf && \
#     make -j4 && \
#     make install 

# # Install Spike
# RUN git clone 'https://github.com/riscv/riscv-isa-sim.git' && \
#     cd riscv-isa-sim && \
#     mkdir build && cd build && \
#     ../configure --prefix=/opt/riscv --with-fesvr=/opt/riscv && \
#     make -j4 && make install && \
#     ln -s /opt/riscv/bin/spike /usr/bin/spike

RUN rm /usr/lib/python3.*/EXTERNALLY-MANAGED

RUN pip3 install parcon

RUN git clone https://github.com/archfx/serval
WORKDIR /serval
RUN yes | raco pkg install 
    
RUN pip3 install notebook
RUN yes | raco pkg install iracket

RUN yes | raco iracket install 

RUN sed -i 's/"--",/"--","-t",/g' /root/.local/share/jupyter/kernels/racket/kernel.json

